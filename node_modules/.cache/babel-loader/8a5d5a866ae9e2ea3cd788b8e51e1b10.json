{"ast":null,"code":"var _jsxFileName = \"/home/mrvlsaf05/portfolio/src/components/Contact.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Particle from './Particle';\nimport emailjs from \"emailjs-com\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Contact() {\n  _s();\n\n  function sendEmail(event) {\n    event.preventDefault();\n    Email.send({\n      Host: \"smtp.yourisp.com\",\n      Username: \"username\",\n      Password: \"password\",\n      To: 'them@website.com',\n      From: \"you@isp.com\",\n      Subject: \"This is the subject\",\n      Body: \"And this is the body\"\n    }).then(message => alert(message));\n    event.target.reset();\n  }\n\n  const {\n    handleSubmit,\n    register,\n    errors\n  } = useForm();\n\n  const onSubmit = data => console.log({\n    data\n  });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Particle, {\n      height: \"25rem\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"common-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Contact Me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact-contents\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit(onSubmit),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"firstName\",\n                children: \"First Name :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"firstName\",\n                name: \"firstName\",\n                ref: register(),\n                className: \"firstName\",\n                placeholder: \"Enter your First Name....\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"lastName\",\n                children: \"Last Name :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"lastName\",\n                name: \"lastName\",\n                ref: register(),\n                className: \"lastName\",\n                placeholder: \"Enter your Last Name...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                children: \"Email :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"email\",\n                name: \"email\",\n                ref: register({\n                  required: \"Email is required.\",\n                  pattern: {\n                    value: /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i,\n                    message: \"Please enter a valid email!\"\n                  }\n                }),\n                className: \"email\",\n                placeholder: \"Enter your Email...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"message\",\n                children: \"Message :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                id: \"message\",\n                name: \"message\",\n                ref: register(),\n                className: \"message\",\n                placeholder: \"Enter your Message...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this), (errors === null || errors === void 0 ? void 0 : errors.email) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"msg-sent\",\n              children: errors.email.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 47\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button-contact\",\n                type: \"submit\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Contact, \"xsFF+HrVQXcyMyi5Y9MM9Lrc4xc=\", false, function () {\n  return [useForm];\n});\n\n_c = Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/home/mrvlsaf05/portfolio/src/components/Contact.js"],"names":["React","Particle","emailjs","useForm","Contact","sendEmail","event","preventDefault","Email","send","Host","Username","Password","To","From","Subject","Body","then","message","alert","target","reset","handleSubmit","register","errors","onSubmit","data","console","log","required","pattern","value","email"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Particle from './Particle';\nimport emailjs from \"emailjs-com\";\nimport { useForm } from \"react-hook-form\";\n\nexport default function Contact() {\n\n    function sendEmail(event) {\n        event.preventDefault();\n\n        Email.send({\n            Host : \"smtp.yourisp.com\",\n            Username : \"username\",\n            Password : \"password\",\n            To : 'them@website.com',\n            From : \"you@isp.com\",\n            Subject : \"This is the subject\",\n            Body : \"And this is the body\"\n        }).then(\n          message => alert(message)\n        );\n        \n        event.target.reset();\n    }\n\n\n    const {handleSubmit, register, errors} = useForm();\n\n    const onSubmit = (data) => console.log({data})\n\n    return (\n        <>\n            <Particle height=\"25rem\" />\n            <div className=\"common-container\">\n                <div className=\"inner-container\">\n                    <h1>Contact Me</h1>\n                    <div className=\"contact-contents\">\n                        <form onSubmit={handleSubmit(onSubmit)}>\n                            <div>\n                                <label htmlFor=\"firstName\">First Name :</label>\n                                <input type=\"text\" id=\"firstName\" name=\"firstName\" ref={register()}  className=\"firstName\" placeholder=\"Enter your First Name....\" />                           \n                            </div>\n                            <div>\n                                <label htmlFor=\"lastName\">Last Name :</label>\n                                <input type=\"text\" id=\"lastName\" name=\"lastName\" ref={register()} className=\"lastName\" placeholder=\"Enter your Last Name...\" />\n                            </div>\n                            <div>\n                                <label htmlFor=\"email\">Email :</label>\n                                <input type=\"text\" id=\"email\" name=\"email\" ref={register({\n                                    required: \"Email is required.\",\n                                    pattern: {\n                                        value: /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i,\n                                        message: \"Please enter a valid email!\"\n                                    },\n                                })} className=\"email\" placeholder=\"Enter your Email...\" />\n                            </div>\n                            <div>\n                                <label htmlFor=\"message\">Message :</label>\n                                <textarea id=\"message\" name=\"message\" ref={register()} className=\"message\" placeholder=\"Enter your Message...\" />\n                            </div>\n                            {errors?.email && <div className=\"msg-sent\">{errors.email.message}</div>}\n                            <div>\n                                <button className=\"button-contact\" type=\"submit\">Submit</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </>\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}